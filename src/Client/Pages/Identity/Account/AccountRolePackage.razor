@page "/account/rolepackage"

@inject IDialogService Dialog
@inject IStringLocalizer<AccountRolePackage> L

<EhulogTitle Title="@L["Role and Package"]" Description="@L["Manage your account role and package subscription. Important: Allow location, if not you will not be able to see the map and proceed."]" />

@if (_appUserDto is not null)
{
    @if (!_hideRolePackage)
    {
        <EditForm Model="@_appUserDto" OnValidSubmit="UpdateAppUserRoleAndPackage">

            <MudPaper Elevation="25">
                <DataAnnotationsValidator />
                <CustomValidation @ref="_customValidation" />
                <MudGrid Justify="Justify.Center">

                    @if (_runningRoles is not null)
                    {
                        <MudItem xs="12" md="6">
                            <MudCard Elevation="0">
                                <MudCardHeader>
                                    <CardHeaderContent>
                                        <MudText Align="Align.Center" Typo="Typo.h5">@(_appUserDto.RoleId is not null && _appUserDto.RoleId.Equals(string.Empty) ? L["Roles"] : L["Role"])</MudText>
                                            @if (_appUserDto.RoleId is not null && _appUserDto.RoleId.Equals(string.Empty))
                                        {
                                            <MudText Align="Align.Center" Typo="Typo.caption" Class="d-block w-100">@L["Select your role. This role determines how you will be interacting the system."]</MudText>
                                        }
                                    </CardHeaderContent>
                                </MudCardHeader>
                                <MudGrid Justify="Justify.Center">

                                    @if (_runningRoles.Count() > 0)
                                    {

                                        @foreach (var role in _runningRoles)
                                        {
                                            <MudItem xs="6" onclick="@(() => { if (!_lockRolePackage) { UpdateRole(role); }})" onmouseover="@(() => { if (!_lockRolePackage) { HoverRole(role); }})" Style="@(role.IsVisible ? "display:block" : "display:none")">
                                                <MudCard Class="position-relative">
                                                    <MudCardContent>
                                                        @{
                                                            var isLender = role?.RoleDto?.Name.Equals("Lender");

                                                            var isLessee = role?.RoleDto?.Name.Equals("Lessee");

                                                            if (isLender.HasValue && isLender.Value == true)
                                                            {
                                                                <MudCardMedia Image="./img/lender.png" Height="150" Style="background-size:contain" />
                                                            }

                                                            if (isLessee.HasValue && isLessee.Value == true)
                                                            {
                                                                <MudCardMedia Image="./img/lessee.png" Height="150" Style="background-size:contain" />
                                                            }
                                                        }

                                                    </MudCardContent>
                                                    @{
                                                        var roleSelected = @role?.IsSelected ?? false;
                                                        var roleHovered = @role?.IsHovered ?? false;

                                                        <MudCardActions>
                                                            <MudGrid>
                                                                <MudItem xs="12" Class="text-center">
                                                                    @* <MudText Typo="Typo.h5" Color="Color.Warning">selected: @roleSelected</MudText>
                                            <MudText Typo="Typo.h5" Color="Color.Warning">hovered: @roleHovered</MudText> *@

                                                                    <MudText Typo="Typo.h5" Color="Color.Warning">@role?.RoleDto?.Name</MudText>
                                                                    @* <MudText Typo="Typo.body2" Color="Color.Info">@role?.RoleDto?.Description</MudText> *@
                                                                </MudItem>
                                                            </MudGrid>

                                                        </MudCardActions>

                                                        var keepOpen = roleSelected || roleHovered ? true : false;

                                                        @if (_lockRolePackage)
                                                        {
                                                            keepOpen = false;
                                                        }

                                                        <MudOverlay Visible="@keepOpen" DarkBackground="true" Absolute="true" Class="text-center">
                                                            <MudText Typo="Typo.h5" Color="Color.Warning">@role?.RoleDto?.Name</MudText>
                                                            <MudText Typo="Typo.body2" Color="Color.Info">@role?.RoleDto?.Description</MudText>
                                                            <br />

                                                            @if (roleSelected)
                                                            {
                                                                <MudButton Variant="Variant.Outlined" Color="Color.Secondary" OnClick="@(() => ClearRole())">Cancel</MudButton>
                                                            }
                                                            else
                                                            {
                                                                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(() => UpdateRole(role ?? default!))">Select</MudButton>
                                                            }
                                                        </MudOverlay>
                                                    }
                                                </MudCard>
                                            </MudItem>
                                        }

                                    }
                                </MudGrid>
                            </MudCard>
                        </MudItem>
                    }



                    @if (_runningPackages is not null && _runningPackages.Count() > 0)
                    {
                        <MudItem xs="12" md="6">
                            <MudCard Elevation="0">
                                <MudCardHeader>
                                    <CardHeaderContent>
                                        <MudText Align="Align.Center" Typo="Typo.h5">@(_appUserDto is not null && _appUserDto.PackageId.Equals(default) ? L["Packages"] : L["Package"])</MudText>
                                        </CardHeaderContent>
                                    </MudCardHeader>

                                    @if (_runningPackages.Count() > 0)
                                {


                                    <MudGrid Justify="Justify.Center">


                                        @foreach (var package in _runningPackages)
                                        {

                                            <MudItem xs="6" onclick="@(() => { if ((_runningRoles?.Where(rr => rr.IsSelected).Count() > 0) == true) { UpdatePackage(package); }})" onmouseover="@(() => { if ((_runningRoles?.Where(rr => rr.IsSelected).Count() > 0) == true) { HoverPackage(package); }})" Class="@((_runningRoles?.Where(rr => rr.IsSelected).Count() > 0) == true ? "" : "")" Style="@(package.IsVisible ? "display:block" : "display:none")">
                                                <MudCard Class="position-relative" Style="background-color:#f1f1f1;">

                                                    <MudCardContent>
                                                        <MudCardMedia Image="@(Config[ConfigNames.ApiBaseUrl] + package?.PackageDto?.Image?.ImagePath)" Height="150" Style="background-size:contain" />
                                                    </MudCardContent>
                                                    <MudCardActions>
                                                        <MudGrid>
                                                            <MudItem xs="12" Class="text-center">
                                                                <MudText Typo="Typo.h5" Color="Color.Warning">@package?.PackageDto?.Name</MudText>
                                                                <MudText Typo="Typo.body2" Color="Color.Info">@package?.PackageDto?.Description</MudText>
                                                            </MudItem>
                                                        </MudGrid>

                                                    </MudCardActions>
                                                    @{
                                                        var packageSelected = @package?.IsSelected ?? false;
                                                        var packageHovered = @package?.IsHovered ?? false;

                                                        var keepOpen = (packageSelected || packageHovered) ? true : false;

                                                        if (_lockRolePackage)
                                                        {
                                                            keepOpen = false;
                                                        }

                                                        <MudOverlay Visible="@keepOpen" DarkBackground="true" Absolute="true" Class="text-center">

                                                            <MudCardMedia Image="@(Config[ConfigNames.ApiBaseUrl] + package?.PackageDto?.Image?.ImagePath)" Height="80" Class="mb-3" Style="background-size:contain" />

                                                            <MudText Typo="Typo.h5" Color="Color.Warning">@package?.PackageDto?.Name</MudText>
                                                            <MudText Typo="Typo.body2" Color="Color.Info">@package?.PackageDto?.Description</MudText>
                                                            <br />

                                                            @if (packageSelected)
                                                            {
                                                                <MudButton Variant="Variant.Outlined" Color="Color.Secondary" OnClick="@(() => ClearPackage())">Cancel</MudButton>
                                                            }
                                                            else
                                                            {
                                                                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(() => UpdatePackage(package ?? default!))">Select</MudButton>
                                                            }
                                                        </MudOverlay>
                                                    }
                                                </MudCard>
                                            </MudItem>
                                        }
                                    </MudGrid>

                                }
                            </MudCard>
                        </MudItem>
                    }

                </MudGrid>

                @* must be unassigned role and the package is non default *@
                @if ((new string[] { "Admin", "Lender", "Lessee" }).Contains(_appUserDto.RoleName) && !_appUserDto.PackageId.Equals(_oldPackage) && !_lockRolePackage)
                {
                    <MudCard Elevation="0">

                        <MudCardContent>

                            <MudCardActions Class="pb-4 pl-4">
                                <MudGrid Justify="Justify.FlexEnd">
                                    @* TODO:// if the role and packages are already fulfilled, these buttons must be reactive. Update AppUserData service for this. *@
                                    <MudButton Class="@(isForSubmission ? "d-inline-flex" : "d-none")" Variant="Variant.Filled" OnClick="@(() => ClearAppUserDto())" StartIcon="@Icons.Filled.ClearAll">
                                        @L["Clear"]
                                    </MudButton>
                                    <MudButton Class="@(isForSubmission ? "d-inline-flex ml-3" : "d-none ml-3")" Variant="Variant.Filled" Color="Color.Success" ButtonType="ButtonType.Submit" StartIcon="@Icons.Filled.Save">
                                        @L["Save"]
                                    </MudButton>
                                </MudGrid>
                            </MudCardActions>
                        </MudCardContent>
                    </MudCard>
                }
            </MudPaper>



        </EditForm>
    }
}