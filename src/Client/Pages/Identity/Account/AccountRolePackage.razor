@page "/account/role-subscription"

@inject IStringLocalizer<AccountRolePackage> L

<EhulogTitle Title="@L["Role and Subscription"]" Description="@L["Manage your account role and package subscription. Important: Allow location, if not you will not be able to see the map and proceed."]" />

@if (AppDataService != default)
{
    @if (AppDataService.AppUser != default)
    {
        <EditForm Model="@AppDataService.AppUser" OnValidSubmit="UpdateAppUserRoleAndPackage">

            <MudPaper Elevation="0">
                <DataAnnotationsValidator />
                <CustomValidation @ref="_customValidation" />
                <MudGrid Justify="Justify.Center">

                    @if (_runningRoles != default)
                    {
                        <MudItem xs="12" md="3">
                            <MudCard Elevation="0">
                                <MudCardHeader>
                                    <CardHeaderContent>
                                        <MudText Align="Align.Center" Typo="Typo.h5">@(AppDataService.AppUser.RoleId != default && AppDataService.AppUser.RoleId.Equals(string.Empty) ? L["Roles"] : L["Role"])</MudText>
                                        @if (AppDataService.AppUser.RoleId != default && AppDataService.AppUser.RoleId.Equals(string.Empty))
                                        {
                                            <MudText Align="Align.Center" Typo="Typo.caption" Class="d-block w-100">@L["Select your role. This role determines how you will be interacting the system."]</MudText>
                                        }
                                    </CardHeaderContent>
                                </MudCardHeader>
                                <MudGrid Justify="Justify.Center">

                                    @if (_runningRoles.Count() > 0)
                                    {

                                        @foreach (var role in _runningRoles)
                                        {
                                            <MudItem xs="@(!LockRole ? 6 : 12 )" onclick="@(() => { if (!LockRole) { UpdateRole(role); }})" onmouseover="@(() => { if (!LockRole) { HoverRole(role); }})" Style="@(role.IsVisible ? "display:block" : "display:none")">
                                                <MudCard Class="position-relative">
                                                    <MudCardContent>
                                                        @{
                                                            var isLender = role?.RoleDto?.Name.Equals("Lender");

                                                            var isLessee = role?.RoleDto?.Name.Equals("Lessee");

                                                            if (isLender.HasValue && isLender.Value == true)
                                                            {
                                                                <MudCardMedia Image="./img/lender.png" Height="150" Style="background-size:contain" />
                                                            }

                                                            if (isLessee.HasValue && isLessee.Value == true)
                                                            {
                                                                <MudCardMedia Image="./img/lessee.png" Height="150" Style="background-size:contain" />
                                                            }
                                                        }

                                                    </MudCardContent>
                                                    @{
                                                        var roleSelected = @role?.IsSelected ?? false;
                                                        var roleHovered = @role?.IsHovered ?? false;

                                                        <MudCardActions>
                                                            <MudGrid>
                                                                <MudItem xs="12" Class="text-center">
                                                                    @* <MudText Typo="Typo.h5" Color="Color.Warning">selected: @roleSelected</MudText>
                                            <MudText Typo="Typo.h5" Color="Color.Warning">hovered: @roleHovered</MudText> *@

                                                                    <MudText Typo="Typo.h5" Color="Color.Warning">@role?.RoleDto?.Name</MudText>
                                                                    @* <MudText Typo="Typo.body2" Color="Color.Info">@role?.RoleDto?.Description</MudText> *@
                                                                </MudItem>
                                                            </MudGrid>

                                                        </MudCardActions>

                                                        var keepOpenRoleOverlay = roleSelected || roleHovered ? true : false;

                                                        @if (LockRole)
                                                        {
                                                            keepOpenRoleOverlay = false;
                                                        }

                                                        <MudOverlay Visible="@keepOpenRoleOverlay" DarkBackground="true" Absolute="true" Class="text-center">
                                                            <MudText Typo="Typo.h5" Color="Color.Warning">@role?.RoleDto?.Name</MudText>
                                                            <MudText Typo="Typo.body2" Color="Color.Info">@role?.RoleDto?.Description</MudText>
                                                            <br />

                                                            @if (roleSelected)
                                                            {
                                                                <MudButton Variant="Variant.Outlined" Color="Color.Secondary" OnClick="@(() => ClearRole())">Change ehulog role</MudButton>
                                                            }
                                                            else
                                                            {
                                                                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(() => UpdateRole(role ?? default!))">Select</MudButton>
                                                            }
                                                        </MudOverlay>
                                                    }
                                                </MudCard>
                                            </MudItem>
                                        }

                                    }
                                </MudGrid>
                            </MudCard>
                        </MudItem>
                    }



                    @if (_runningPackages != default && _runningPackages.Count() > 0)
                    {
                        <MudItem xs="12" md="9">
                            <MudCard Elevation="0">
                                <MudCardHeader>
                                    <CardHeaderContent>
                                        <MudText Align="Align.Center" Typo="Typo.h5">
                                            @(CurrentPackageId.Equals(default) ? L["Packages"] : L["Package"])
                                        </MudText>
                                    </CardHeaderContent>
                                </MudCardHeader>

                                <MudGrid Justify="Justify.Center">
                                    @foreach (var package in _runningPackages)
                                    {
                                        @if (package != default)
                                        {
                                            @if (package.PackageDto != default)
                                            {
                                                <MudItem xs="6" md="@((package.IsVisible && package.IsSelected) || LockPackage ? 4 : 3)" lg="@((package.IsVisible && package.IsSelected) || LockPackage ? 3 : 2)" onclick="@(() => { if ((_runningRoles?.Where(rr => rr.IsSelected).Count() > 0) == true) { SelectPackage(package); }})" onmouseover="@(() => { if ((_runningRoles?.Where(rr => rr.IsSelected).Count() > 0) == true) { HoverPackage(package); }})" Class="@((_runningRoles?.Where(rr => rr.IsSelected).Count() > 0) == true ? "" : "")" Style="@(package.IsVisible ? "display:block" : "display:none")">
                                                    <MudCard Class="position-relative" Style="background-color:#f1f1f1;">

                                                        <MudCardContent Class="pa-0">
                                                            <MudCardMedia Image="@(Config[ConfigNames.ApiBaseUrl] + package.PackageDto.Image?.ImagePath)" Height="150" Style="background-size:contain" />
                                                        </MudCardContent>
                                                        <MudCardActions>
                                                            <MudGrid>
                                                                <MudItem xs="12" Class="text-center pt-2">
                                                                    <MudText Typo="Typo.h5" Color="Color.Warning">@package.PackageDto.Name</MudText>
                                                                    <MudText Typo="Typo.body2" Color="Color.Warning">@package.PackageDto.Description</MudText>

                                                                    @if (package.PackageDto.IsLender == true)
                                                                    {
                                                                        <MudGrid Class="mt-3">
                                                                            <MudItem xs="6">
                                                                                <MudPaper Elevation="0" Class="d-flex align-center justify-center mud-width-full">
                                                                                    <MudText Typo="Typo.caption">
                                                                                        Max Amounts: @string.Format("{0:#,0.00}", @package.PackageDto.MaxAmounts)
                                                                                    </MudText>
                                                                                </MudPaper>
                                                                            </MudItem>
                                                                            <MudItem xs="6">
                                                                                <MudPaper Elevation="0" Class="d-flex align-center justify-center mud-width-full">
                                                                                    <MudText Typo="Typo.caption">
                                                                                        Max Lessees: @package.PackageDto.MaxLessees
                                                                                    </MudText>
                                                                                </MudPaper>
                                                                            </MudItem>
                                                                            @if (package.PackageDto.SubscriptionPrice > 0)
                                                                            {
                                                                                <MudItem xs="6">
                                                                                    <MudPaper Elevation="0" Class="d-flex align-center justify-center mud-width-full">
                                                                                        <MudText Typo="Typo.caption">
                                                                                            Monthly subscription fee:  @string.Format("{0:#,0.00}",package.PackageDto.SubscriptionPrice)
                                                                                        </MudText>
                                                                                    </MudPaper>
                                                                                </MudItem>
                                                                            }
                                                                        </MudGrid>
                                                                    }
                                                                    else
                                                                    {
                                                                        <MudGrid>
                                                                            <MudItem xs="6">
                                                                                <MudPaper Elevation="0" Class="d-flex align-center justify-center mud-width-full">
                                                                                    <MudText Typo="Typo.caption">
                                                                                        Max Amounts: @string.Format("{0:#,0.00}", @package.PackageDto.MaxAmounts)
                                                                                    </MudText>
                                                                                </MudPaper>
                                                                            </MudItem>
                                                                            <MudItem xs="6">
                                                                                <MudPaper Elevation="0" Class="d-flex align-center justify-center mud-width-full">
                                                                                    <MudText Typo="Typo.caption">
                                                                                        Max Applications: @package.PackageDto.MaxApplications
                                                                                    </MudText>
                                                                                </MudPaper>
                                                                            </MudItem>
                                                                            <MudItem xs="6">
                                                                                <MudPaper Elevation="0" Class="d-flex align-center justify-center mud-width-full">
                                                                                    <MudText Typo="Typo.caption">
                                                                                        Max Lenders: @package.PackageDto.MaxLenders
                                                                                    </MudText>
                                                                                </MudPaper>
                                                                            </MudItem>
                                                                            @if (package.PackageDto.SubscriptionPrice > 0)
                                                                            {
                                                                                <MudItem xs="6">
                                                                                    <MudPaper Elevation="0" Class="d-flex align-center justify-center mud-width-full">
                                                                                        <MudText Typo="Typo.caption">
                                                                                            Monthly subscription:  @string.Format("{0:#,0.00}",package.PackageDto.SubscriptionPrice)
                                                                                        </MudText>
                                                                                    </MudPaper>
                                                                                </MudItem>
                                                                            }

                                                                        </MudGrid>
                                                                    }

                                                                    @* <MudIcon Color="Color.Warning" Icon="@Icons.Material.Filled.WarningAmber" Title="Favorite" /><br /><MudText Typo="Typo.caption" Color="Color.Warning">To be implemented: This will be permanent once you paid the subscription plan.</MudText> *@
                                                                </MudItem>
                                                            </MudGrid>

                                                        </MudCardActions>

                                                        @{
                                                            var packageSelected = false;
                                                            var packageHovered = false;

                                                            if (package != default)
                                                            {
                                                                packageSelected = @package.IsSelected;
                                                                packageHovered = @package.IsHovered;
                                                            }


                                                            var keepOpenPackageOverlay = (packageSelected || packageHovered) ? true : false;

                                                            // selected package is locked so keep the overlay hidden
                                                            if (LockPackage)
                                                            {
                                                                keepOpenPackageOverlay = false;
                                                            }

                                                            @if (keepOpenPackageOverlay)
                                                            {
                                                                // one visible package / maybe the default for the current role keep the overlay hidden
                                                                var singleDefaultVisible = _runningPackages.Where(p => p.IsVisible).Count() == 1 && _runningPackages.First(p => p.IsVisible).PackageDto.IsDefault;

                                                                @if (singleDefaultVisible)
                                                                {
                                                                    // this total packages
                                                                    // tallies all the number of valid
                                                                    // packages for the current role
                                                                    @if (TotalCountPackagesForCurrentRole > 1)
                                                                    {
                                                                        <MudCardActions Class="text-center justify-center mb-3">
                                                                            <MudButton StartIcon="@Icons.Filled.CardGiftcard" Variant="Variant.Filled" Color="Color.Warning" OnClick="@(() => ClearPackage())">Change Package</MudButton>
                                                                        </MudCardActions>
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    <MudOverlay Visible="@keepOpenPackageOverlay" DarkBackground="true" Absolute="true" Class="text-center" onmouseout="@(() => {_isChangePackageOverlayButtonHover = false; StateHasChanged(); })" onmouseover="@(() => { _isChangePackageOverlayButtonHover = true; StateHasChanged(); })">
                                                                        @if (package != default)
                                                                        {
                                                                            <MudCardMedia Image="@(Config[ConfigNames.ApiBaseUrl] + package.PackageDto.Image?.ImagePath)" Height="100" Class="mb-3" Style="background-size:contain" />

                                                                            <MudText Typo="Typo.h4" Style="@($"color:{Colors.Shades.White}")">@package.PackageDto.Name</MudText>

                                                                            @if (package.PackageDto.IsLender == true)
                                                                            {
                                                                                <MudGrid Class="ml-0 mr-0">
                                                                                    <MudItem xs="12">
                                                                                        <MudText Typo="Typo.caption" Style="@($"color:{Colors.Shades.White}")">
                                                                                            Max Amounts: @string.Format("{0:#,0.00}", @package.PackageDto.MaxAmounts)
                                                                                        </MudText><br />

                                                                                        <MudText Typo="Typo.caption" Style="@($"color:{Colors.Shades.White}")">
                                                                                            Max Lessees: @package.PackageDto.MaxLessees
                                                                                        </MudText><br />
                                                                                        @if (package.PackageDto.SubscriptionPrice > 0)
                                                                                        {
                                                                                            <MudText Typo="Typo.caption" Style="@($"color:{Colors.Shades.White}")">
                                                                                                Monthly subscription fee:  @string.Format("{0:#,0.00}",package.PackageDto.SubscriptionPrice)
                                                                                            </MudText>
                                                                                        }
                                                                                    </MudItem>
                                                                                </MudGrid>
                                                                            }
                                                                            else
                                                                            {
                                                                                <MudGrid Class="ml-0 mr-0">
                                                                                    <MudItem xs="6">
                                                                                        <MudText Typo="Typo.caption" Style="@($"color:{Colors.Shades.White}")">
                                                                                            Max Amounts: @string.Format("{0:#,0.00}", @package.PackageDto.MaxAmounts)
                                                                                        </MudText><br />
                                                                                        <MudText Typo="Typo.caption" Style="@($"color:{Colors.Shades.White}")">
                                                                                            Max Applications: @package.PackageDto.MaxApplications
                                                                                        </MudText><br />
                                                                                        <MudText Typo="Typo.caption" Style="@($"color:{Colors.Shades.White}")">
                                                                                            Max Lenders: @package.PackageDto.MaxLenders
                                                                                        </MudText><br />
                                                                                        @if (package.PackageDto.SubscriptionPrice > 0)
                                                                                        {
                                                                                            <MudText Typo="Typo.caption" Style="@($"color:{Colors.Shades.White}")">
                                                                                                Monthly subscription:  @string.Format("{0:#,0.00}",package.PackageDto.SubscriptionPrice)
                                                                                            </MudText>
                                                                                        }
                                                                                    </MudItem>
                                                                                </MudGrid>
                                                                            }
                                                                        }

                                                                        <br />

                                                                        @if (packageSelected)
                                                                        {
                                                                            if (package != default && package.PackageDto.IsDefault && package.IsSelected)
                                                                            {
                                                                                <MudButton StartIcon="@Icons.Filled.CardGiftcard" Variant="Variant.Filled" Color="Color.Warning">Default</MudButton>
                                                                            }
                                                                            else
                                                                            {
                                                                                <MudButton Style="@(_isChangePackageOverlayButtonHover ? "display:inline" : "display:none")" StartIcon="@Icons.Filled.CardGiftcard" Variant="Variant.Filled" Color="Color.Warning" OnClick="@(() => ClearPackage())">Change Package</MudButton>
                                                                                @* <MudButton StartIcon="@Icons.Filled.CardGiftcard" Variant=" Variant.Filled" Color="Color.Warning" OnClick="@(() => ClearPackage())">Subscribe</MudButton> *@
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            @if (package != null)
                                                                            {
                                                                                @if (CurrentPackageId != default)
                                                                                {
                                                                                    @if (!CurrentPackageId.Equals(package.PackageDto.Id))
                                                                                    {
                                                                                        <MudButton StartIcon="@Icons.Filled.CardGiftcard" Variant="Variant.Filled" Color="Color.Success" OnClick="@(() => SelectPackage(package ?? default!))">Select</MudButton>
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                        <br />

                                                                    </MudOverlay>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                if (LockPackage)
                                                                {
                                                                    <MudCardActions>
                                                                        <MudGrid Class="ml-0 mr-0">
                                                                            <MudItem xs="12" Class="text-center">
                                                                                <MudText Typo="Typo.body2" Color="Color.Success">
                                                                                    Active Subscription
                                                                                </MudText>
                                                                            </MudItem>
                                                                            @if (package != default && !package.PackageDto.IsDefault)
                                                                            {
                                                                                @if (!AppDataService.AppUser.RolePackageStatus.Equals(VerificationStatus.Verified))
                                                                                {
                                                                                    <MudItem xs="   12" Class="text-center">
                                                                                        @* //TODO:/ mock payment for admin, for testing purposes *@
                                                                                        <MudButton OnClick="@(async () => await PaymentMock())" DisableRipple="true" Variant="Variant.Filled" StartIcon="@Icons.Filled.Save" Style="@($"color:{Colors.Shades.Black};")" IconColor="   Color.Error">
                                                                                            @L["Mock Payment"]
                                                                                        </MudButton>
                                                                                    </MudItem>
                                                                                }

                                                                            }

                                                                            @if (AppDataService.AppUser.RolePackageStatus.Equals(VerificationStatus.Initial))
                                                                            {
                                                                                <MudItem xs="12" Class="text-center">
                                                                                    <MudPaper Elevation="0" Class="d-flex align-center justify-center mud-width-full">
                                                                                        <MudText Typo="Typo.body2" Color="Color.Error">
                                                                                            <MudIcon Icon="@Icons.Filled.Error"></MudIcon> Payment error. Settle or contact support.
                                                                                        </MudText>
                                                                                    </MudPaper>
                                                                                </MudItem>
                                                                            }

                                                                            <MudItem xs="12" Class="text-center">

                                                                                <MudText Color="Color.Success" Typo="Typo.body1" Style="font-weight:700;">Want more income?</MudText>
                                                                                <MudButton StartIcon="@Icons.Filled.Money" Variant="Variant.Text" Color="Color.Warning" OnClick="@(()=> CancelPlanAsync())">Change Plan</MudButton>
                                                                            </MudItem>
                                                                        </MudGrid>
                                                                    </MudCardActions>
                                                                }

                                                            }
                                                        }

                                                    </MudCard>
                                                </MudItem>
                                            }
                                        }
                                    }
                                </MudGrid>
                            </MudCard>
                        </MudItem>
                    }

                </MudGrid>

                @* must be unassigned role and the package is non default *@
                @{
                    bool isValidRole = (new string[] { "Admin", "Lender", "Lessee" }).Contains(AppDataService.AppUser.RoleName);
                    bool isSameOldPackage = NewPackageId.Equals(CurrentPackageId);
                    bool isNeitherLockedPackageOrRole = (!LockRole || !LockPackage);
                }
                @if (isValidRole && !isSameOldPackage && isNeitherLockedPackageOrRole)
                {
                    <MudCard Elevation="0">

                        <MudCardContent>

                            <MudCardActions Class="pb-4 pl-4">

                               @* <MudText>Cancel: @CancelCurrentPlan</MudText>
                                <MudText>Sam as current: @isSameOldPackage</MudText>
                    <MudText>@CurrentPackageId</MudText>
                    <MudText>@NewPackageId</MudText> *@

                                <MudGrid Justify="Justify.Center">
                                    @* TODO:// if the role and packages are already fulfilled, these buttons must be reactive. Update AppUserData service for this. *@
                                    @if (CancelCurrentPlan && !isSameOldPackage)
                                    {
                                        <MudButton Class="@(IsForSubmission ? "d-inline-flex py-2 px-5 mx-2" : "d-none py-2 px-5 mx-2")" Color="Color.Error" Variant="Variant.Filled" OnClick="@(() => ClearReload())" StartIcon="@Icons.Filled.Cancel">
                                            @L["Cancel"]
                                        </MudButton>
                                        <MudButton Class="@(IsForSubmission ? "d-inline-flex py-2 px-5 mx-2" : "d-none py-2 px-5 mx-2")" Variant="Variant.Filled" ButtonType="ButtonType.Submit" Size="Size.Medium" StartIcon="@Icons.Filled.Payment" Style="@($"color:{Colors.Shades.Black};")" IconColor="Color.Success">
                                            @L["Proceed payment"]
                                        </MudButton>
                                    }
                                    else
                                    {
                                        @* the payment did not push thru and changed status to submitted ONLY *@
                                        if (AppDataService.AppUser.RolePackageStatus.Equals(VerificationStatus.Submitted))
                                        {
                                            <MudButton Class="@(IsForSubmission ? "d-inline-flex py-2 px-5 mx-2" : "d-none py-2 px-5 mx-2")" Variant="Variant.Filled" ButtonType="ButtonType.Submit" StartIcon="@Icons.Filled.Save" Style="@($"color:{Colors.Shades.Black};")" IconColor="Color.Success">
                                                @L["Payment"]
                                            </MudButton>

                                        } else
                                        {
                                            <MudButton Class="@(IsForSubmission ? "d-inline-flex py-2 px-5 mx-2" : "d-none py-2 px-5 mx-2")" Color="Color.Error" Variant="Variant.Filled" OnClick="@(() => ClearReload())" StartIcon="@Icons.Filled.Cancel">
                                                @L["Cancel"]
                                            </MudButton>
                                        }

                                    }

                                </MudGrid>
                            </MudCardActions>
                        </MudCardContent>
                    </MudCard>
                }
                else
                {
                    @* <MudText>@CancelCurrentPlan</MudText>
        <MudText>@CurrentPackageId</MudText>
        <MudText>@NewPackageId</MudText> *@
                    if (CancelCurrentPlan && (CurrentPackageId != NewPackageId))
                    {
                        <MudAlert NoIcon="true" Severity="Severity.Warning" ContentAlignment="HorizontalAlignment.Center">
                            <MudText Typo="Typo.body1" Align="Align.Center">Current package equals this package. No further actions required.<br /> If you want to cancel subscription please follow this link.</MudText>
                        </MudAlert>
                    }
                    else
                    {
                        if (CancelCurrentPlan)
                        {
                            <MudGrid Justify="Justify.Center">
                                <MudButton Variant="Variant.Filled" OnClick="@(() => ClearReload())" StartIcon="@Icons.Filled.Cancel">
                                    @L["Cancel"]
                                </MudButton>
                            </MudGrid>
                        }
                    }
                }
            </MudPaper>



        </EditForm>
    }
}

@code {
    private RenderFragment _infoMessageWrapper { get; set; } = default!;

    private RenderFragment addInfoContent = __builder =>
    {
        <MudText Typo="Typo.h5" Class='mb-3' Color="Color.Error">Are you sure?</MudText>
        <MudText Typo="Typo.body1">You are about to change/cancel your plan.</MudText>
        <MudList Clickable="false">
            <MudDivider />
            <MudListItem Text="Changed to default. If eligible, the current, if paid subscription, will be terminated and will discontinue billing. You may continue using the current subscription package until end of billing cycle." />
            <MudListItem Text="Changed to paid plan. If eligible, after payment, the NEW PLAN will take effect immediately." />
            <MudDivider />
            <MudListItem Style="@($"color:{Colors.Red.Default}")" Text="T&Cs: You are about to change/cancel your plan." />

        </MudList>
    };

    private RenderFragment AddInfoWrapperContent() => builder =>
    {
        builder.AddContent(1, addInfoContent);
    };
}