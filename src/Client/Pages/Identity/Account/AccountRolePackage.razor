@page "/account/role-subscription"

@inject IDialogService Dialog
@inject IStringLocalizer<AccountRolePackage> L

<EhulogTitle Title="@L["Role and Subscription"]" Description="@L["Manage your account role and package subscription. Important: Allow location, if not you will not be able to see the map and proceed."]" />

@if (AppDataService != default && AppDataService.AppUser != default)
{
    <EditForm Model="@AppDataService.AppUser" OnValidSubmit="UpdateAppUserRoleAndPackage">

        <MudPaper Elevation="0">
            <DataAnnotationsValidator />
            <CustomValidation @ref="_customValidation" />
            <MudGrid Justify="Justify.Center">

                @if (_runningRoles is not null)
                {
                    <MudItem xs="12" md="3">
                        <MudCard Elevation="0">
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudText Align="Align.Center" Typo="Typo.h5">@(AppDataService.AppUser.RoleId is not null && AppDataService.AppUser.RoleId.Equals(string.Empty) ? L["Roles"] : L["Role"])</MudText>
                                        @if (AppDataService.AppUser.RoleId is not null && AppDataService.AppUser.RoleId.Equals(string.Empty))
                                    {
                                        <MudText Align="Align.Center" Typo="Typo.caption" Class="d-block w-100">@L["Select your role. This role determines how you will be interacting the system."]</MudText>
                                    }
                                </CardHeaderContent>
                            </MudCardHeader>
                            <MudGrid Justify="Justify.Center">

                                @if (_runningRoles.Count() > 0)
                                {

                                    @foreach (var role in _runningRoles)
                                    {
                                        <MudItem xs="6" onclick="@(() => { if (!LockRole) { UpdateRole(role); }})" onmouseover="@(() => { if (!LockRole) { HoverRole(role); }})" Style="@(role.IsVisible ? "display:block" : "display:none")">
                                            <MudCard Class="position-relative">
                                                <MudCardContent>
                                                    @{
                                                        var isLender = role?.RoleDto?.Name.Equals("Lender");

                                                        var isLessee = role?.RoleDto?.Name.Equals("Lessee");

                                                        if (isLender.HasValue && isLender.Value == true)
                                                        {
                                                            <MudCardMedia Image="./img/lender.png" Height="150" Style="background-size:contain" />
                                                        }

                                                        if (isLessee.HasValue && isLessee.Value == true)
                                                        {
                                                            <MudCardMedia Image="./img/lessee.png" Height="150" Style="background-size:contain" />
                                                        }
                                                    }

                                                </MudCardContent>
                                                @{
                                                    var roleSelected = @role?.IsSelected ?? false;
                                                    var roleHovered = @role?.IsHovered ?? false;

                                                    <MudCardActions>
                                                        <MudGrid>
                                                            <MudItem xs="12" Class="text-center">
                                                                @* <MudText Typo="Typo.h5" Color="Color.Warning">selected: @roleSelected</MudText>
                                            <MudText Typo="Typo.h5" Color="Color.Warning">hovered: @roleHovered</MudText> *@

                                                                <MudText Typo="Typo.h5" Color="Color.Warning">@role?.RoleDto?.Name</MudText>
                                                                @* <MudText Typo="Typo.body2" Color="Color.Info">@role?.RoleDto?.Description</MudText> *@
                                                            </MudItem>
                                                        </MudGrid>

                                                    </MudCardActions>

                                                    var keepOpen = roleSelected || roleHovered ? true : false;

                                                    @if (LockRole)
                                                    {
                                                        keepOpen = false;
                                                    }

                                                    <MudOverlay Visible="@keepOpen" DarkBackground="true" Absolute="true" Class="text-center">
                                                        <MudText Typo="Typo.h5" Color="Color.Warning">@role?.RoleDto?.Name</MudText>
                                                        <MudText Typo="Typo.body2" Color="Color.Info">@role?.RoleDto?.Description</MudText>
                                                        <br />

                                                        @if (roleSelected)
                                                        {
                                                            <MudButton Variant="Variant.Outlined" Color="Color.Secondary" OnClick="@(() => ClearRole())">Change ehulog role</MudButton>
                                                        }
                                                        else
                                                        {
                                                            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(() => UpdateRole(role ?? default!))">Select</MudButton>
                                                        }
                                                    </MudOverlay>
                                                }
                                            </MudCard>
                                        </MudItem>
                                    }

                                }
                            </MudGrid>
                        </MudCard>
                    </MudItem>
                }



                @if (_runningPackages is not null && _runningPackages.Count() > 0)
                {
                    <MudItem xs="12" md="9">
                        <MudCard Elevation="0">
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudText Align="Align.Center" Typo="Typo.h5">
                                        @(AppDataService.AppUser is not null && AppDataService.AppUser.PackageId.Equals(default) ? L["Packages"] : L["Package"])
                                    </MudText>
                                </CardHeaderContent>
                            </MudCardHeader>

                            <MudGrid Justify="Justify.Center">
                                @foreach (var package in _runningPackages)
                                {
                                    <MudItem xs="6" md="3" lg="2" onclick="@(() => { if ((_runningRoles?.Where(rr => rr.IsSelected).Count() > 0) == true) { UpdatePackage(package); }})" onmouseover="@(() => { if ((_runningRoles?.Where(rr => rr.IsSelected).Count() > 0) == true) { HoverPackage(package); }})" Class="@((_runningRoles?.Where(rr => rr.IsSelected).Count() > 0) == true ? "" : "")" Style="@(package.IsVisible ? "display:block" : "display:none")">
                                        <MudCard Class="position-relative" Style="background-color:#f1f1f1;">

                                            <MudCardContent>
                                                <MudCardMedia Image="@(Config[ConfigNames.ApiBaseUrl] + package?.PackageDto?.Image?.ImagePath)" Height="150" Style="background-size:contain" />
                                            </MudCardContent>
                                            <MudCardActions>
                                                <MudGrid>
                                                    <MudItem xs="12" Class="text-center">
                                                        <MudText Typo="Typo.h5" Color="Color.Warning">@package?.PackageDto?.Name</MudText>
                                                        <MudText Typo="Typo.body2" Color="Color.Warning">@package?.PackageDto?.Description</MudText>

                                                        @if (package?.PackageDto?.IsLender == true)
                                                        {
                                                            <MudGrid>
                                                                <MudItem xs="6">
                                                                    <MudPaper Elevation="0" Class="d-flex align-center justify-center mud-width-full">
                                                                        <MudText Typo="Typo.caption">
                                                                            Maximum Amounts: @string.Format("{0:#,0.00}", @package?.PackageDto?.MaxAmounts)
                                                                        </MudText>
                                                                    </MudPaper>
                                                                </MudItem>
                                                                <MudItem xs="6">
                                                                    <MudPaper Elevation="0" Class="d-flex align-center justify-center mud-width-full">
                                                                        <MudText Typo="Typo.caption">
                                                                            Maximum Lessees: @package?.PackageDto?.MaxLessees
                                                                        </MudText>
                                                                    </MudPaper>
                                                                </MudItem>
                                                                @if (package?.PackageDto?.SubscriptionPrice > 0)
                                                                {
                                                                    <MudItem xs="6">
                                                                        <MudPaper Elevation="0" Class="d-flex align-center justify-center mud-width-full">
                                                                            <MudText Typo="Typo.caption">
                                                                                Monthly subscription fee:  @string.Format("{0:#,0.00}",package?.PackageDto?.SubscriptionPrice)
                                                                            </MudText>
                                                                        </MudPaper>
                                                                    </MudItem>
                                                                }
                                                            </MudGrid>
                                                        }
                                                        else
                                                        {
                                                            <MudGrid>
                                                                <MudItem xs="6">
                                                                    <MudPaper Elevation="0" Class="d-flex align-center justify-center mud-width-full">
                                                                        <MudText Typo="Typo.caption">
                                                                            Maximum Amounts: @string.Format("{0:#,0.00}", @package?.PackageDto?.MaxAmounts)
                                                                        </MudText>
                                                                    </MudPaper>
                                                                </MudItem>
                                                                <MudItem xs="6">
                                                                    <MudPaper Elevation="0" Class="d-flex align-center justify-center mud-width-full">
                                                                        <MudText Typo="Typo.caption">
                                                                            Maximum Applications: @package?.PackageDto?.MaxApplications
                                                                        </MudText>
                                                                    </MudPaper>
                                                                </MudItem>
                                                                <MudItem xs="6">
                                                                    <MudPaper Elevation="0" Class="d-flex align-center justify-center mud-width-full">
                                                                        <MudText Typo="Typo.caption">
                                                                            Maximum Lenders: @package?.PackageDto?.MaxLenders
                                                                        </MudText>
                                                                    </MudPaper>
                                                                </MudItem>
                                                                @if (package?.PackageDto?.SubscriptionPrice > 0)
                                                                {
                                                                    <MudItem xs="6">
                                                                        <MudPaper Elevation="0" Class="d-flex align-center justify-center mud-width-full">
                                                                            <MudText Typo="Typo.caption">
                                                                                Monthly subscription:  @string.Format("{0:#,0.00}",package?.PackageDto?.SubscriptionPrice)
                                                                            </MudText>
                                                                        </MudPaper>
                                                                    </MudItem>
                                                                }

                                                            </MudGrid>
                                                        }
                                                        <MudIcon Color="Color.Warning" Icon="@Icons.Material.Filled.WarningAmber" Title="Favorite" /><br /><MudText Typo="Typo.caption" Color="Color.Warning">To be implemented: This will be permanent once you paid the subscription plan.</MudText>
                                                    </MudItem>
                                                </MudGrid>

                                            </MudCardActions>
                                            @{
                                                var packageSelected = false;
                                                var packageHovered = false;

                                                if (package != default)
                                                {
                                                    packageSelected = @package.IsSelected;
                                                    packageHovered = @package.IsHovered;
                                                }


                                                var keepOpen = (packageSelected || packageHovered) ? true : false;

                                                // selected package is locked so keep the overlay hidden
                                                if (LockPackage)
                                                {
                                                    keepOpen = false;
                                                }

                                                @if (keepOpen)
                                                {
                                                    // one visible package / maybe the default for the current role keep the overlay hidden
                                                    var singleDefaultVisible = _runningPackages.Where(p => p.IsVisible).Count() == 1 && _runningPackages.First(p => p.IsVisible).PackageDto.IsDefault;

                                                    @if (singleDefaultVisible)
                                                    {
                                                        // this total packages
                                                        // tallies all the number of valid
                                                        // packages for the current role
                                                        @if (TotalCountPackagesForCurrentRole > 1)
                                                        {
                                                            <MudCardActions Class="text-center justify-center">
                                                                <MudButton StartIcon="@Icons.Filled.CardGiftcard" Variant="Variant.Filled" Color="Color.Warning" OnClick="@(() => ClearPackage())">Change Package</MudButton>
                                                            </MudCardActions>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <MudOverlay Visible="@keepOpen" DarkBackground="true" Absolute="true" Class="text-center">
                                                            @if (package != default)
                                                            {
                                                                <MudCardMedia Image="@(Config[ConfigNames.ApiBaseUrl] + package.PackageDto?.Image?.ImagePath)" Height="100" Class="mb-3" Style="background-size:contain" />

                                                                <MudText Typo="Typo.h4" Style="@($"color:{Colors.Shades.White}")">@package.PackageDto?.Name</MudText>

                                                                @if (package.PackageDto?.IsLender == true)
                                                                {
                                                                    <MudGrid>
                                                                        <MudItem xs="12">
                                                                            <MudText Typo="Typo.caption" Style="@($"color:{Colors.Shades.White}")">
                                                                                Maximum Amounts: @string.Format("{0:#,0.00}", @package.PackageDto?.MaxAmounts)
                                                                            </MudText><br />

                                                                            <MudText Typo="Typo.caption" Style="@($"color:{Colors.Shades.White}")">
                                                                                Maximum Lessees: @package.PackageDto?.MaxLessees
                                                                            </MudText><br />
                                                                            @if (package.PackageDto?.SubscriptionPrice > 0)
                                                                            {
                                                                                <MudText Typo="Typo.caption" Style="@($"color:{Colors.Shades.White}")">
                                                                                    Monthly subscription fee:  @string.Format("{0:#,0.00}",package.PackageDto?.SubscriptionPrice)
                                                                                </MudText>
                                                                            }
                                                                        </MudItem>
                                                                    </MudGrid>
                                                                }
                                                                else
                                                                {
                                                                    <MudGrid>
                                                                        <MudItem xs="6">
                                                                            <MudText Typo="Typo.caption" Style="@($"color:{Colors.Shades.White}")">
                                                                                Maximum Amounts: @string.Format("{0:#,0.00}", @package.PackageDto?.MaxAmounts)
                                                                            </MudText><br />
                                                                            <MudText Typo="Typo.caption" Style="@($"color:{Colors.Shades.White}")">
                                                                                Maximum Applications: @package.PackageDto?.MaxApplications
                                                                            </MudText><br />
                                                                            <MudText Typo="Typo.caption" Style="@($"color:{Colors.Shades.White}")">
                                                                                Maximum Lenders: @package.PackageDto?.MaxLenders
                                                                            </MudText><br />
                                                                            @if (package.PackageDto?.SubscriptionPrice > 0)
                                                                            {
                                                                                <MudText Typo="Typo.caption" Style="@($"color:{Colors.Shades.White}")">
                                                                                    Monthly subscription:  @string.Format("{0:#,0.00}",package.PackageDto?.SubscriptionPrice)
                                                                                </MudText>
                                                                            }
                                                                        </MudItem>
                                                                    </MudGrid>
                                                                }
                                                            }

                                                            <br />

                                                            @if (packageSelected)
                                                            {
                                                                <MudButton StartIcon="@Icons.Filled.CardGiftcard" Variant="Variant.Filled" Color="Color.Warning" OnClick="@(() => ClearPackage())">Change Package</MudButton>
                                                            }
                                                            else
                                                            {
                                                                <MudButton StartIcon="@Icons.Filled.CardGiftcard" Variant="Variant.Filled" Color="Color.Success" OnClick="@(() => UpdatePackage(package ?? default!))">Select</MudButton>
                                                            }
                                                            <br />

                                                        </MudOverlay>
                                                    }
                                                }
                                                else
                                                {
                                                    if (LockPackage)
                                                    {
                                                        <MudCardActions>
                                                            <MudGrid>
                                                                <MudItem xs="12" Class="text-center">
                                                                    <MudPaper Elevation="0" Class="d-flex align-center justify-center mud-width-full">
                                                                        <MudText Typo="Typo.h5" Color="Color.Success">
                                                                            Active Subscription
                                                                        </MudText>

                                                                        @* //TODO:/ mock payment for admin, for testing purposes *@
                                                                        <MudButton OnClick="@(async () => await PaymentMock())" DisableRipple="true" Variant="Variant.Filled" StartIcon="@Icons.Filled.Save" Style="@($"color:{Colors.Shades.Black};")" IconColor="Color.Error">
                                                                            @L["Mock Payment"]
                                                                        </MudButton>
                                                                    </MudPaper>
                                                                </MudItem>

                                                                @if (AppDataService.AppUser.RolePackageStatus.Equals(VerificationStatus.Initial))
                                                                {
                                                                    <MudItem xs="12" Class="text-center">
                                                                        <MudPaper Elevation="0" Class="d-flex align-center justify-center mud-width-full">
                                                                            <MudText Typo="Typo.body2" Color="Color.Error">
                                                                                <MudIcon Icon="@Icons.Filled.Error"></MudIcon> Payment error. Settle or contact support.
                                                                            </MudText>
                                                                        </MudPaper>
                                                                    </MudItem>
                                                                }

                                                                <MudItem xs="12" Class="text-center">
                                                                    <MudButton StartIcon="@Icons.Filled.Cancel" Variant="Variant.Text" Color="Color.Warning" OnClick="@(()=> ClearPackage())">Cancel Current Plan</MudButton>
                                                                </MudItem>
                                                                @*

                                        //cancel current plan
                                        OnClick="@(() => ClearPackage())"
                                        mark the plan as cancelled
                                        cancel current plan will terminate the plan but the running plan will be kept.
                                        cancelling plan allows

                                        // TODO:/ allow only to change package, if paid the curent pending or subscription is expired
                                        // defaults to default if there's no payment
                                        // cancel the current plan can be used as well
                                        // find a better implementation
                                        <MudItem xs="12" Class="text-center">
                                        <MudButton StartIcon="@Icons.Filled.CardGiftcard" Variant="Variant.Text" Color="Color.Warning" OnClick="@(() => ClearPackage())">Change Package</MudButton>
                                        </MudItem> *@
                                                            </MudGrid>
                                                        </MudCardActions>
                                                    }

                                                }
                                            }

                                        </MudCard>
                                    </MudItem>
                                }
                            </MudGrid>
                        </MudCard>
                    </MudItem>
                }

            </MudGrid>

            @* must be unassigned role and the package is non default *@
            @if ((new string[] { "Admin", "Lender", "Lessee" }).Contains(AppDataService.AppUser.RoleName) && !AppDataService.AppUser.PackageId.Equals(OldPackage) && (!LockRole || !LockPackage))
            {
                <MudCard Elevation="0">

                    <MudCardContent>

                        <MudCardActions Class="pb-4 pl-4">
                            <MudGrid Justify="Justify.Center">
                                @* TODO:// if the role and packages are already fulfilled, these buttons must be reactive. Update AppUserData service for this. *@
                                @if (AppDataService.AppUser.RolePackageStatus.Equals(VerificationStatus.Initial))
                                {
                                    <MudButton Class="@(IsForSubmission ? "d-inline-flex py-2 px-5 mx-2" : "d-none py-2 px-5 mx-2")" Variant="Variant.Filled" OnClick="@(() => ClearReload())" StartIcon="@Icons.Filled.ClearAll">
                                        @L["Reload"]
                                    </MudButton>
                                    <MudButton Class="@(IsForSubmission ? "d-inline-flex py-2 px-5 mx-2" : "d-none py-2 px-5 mx-2")" Variant="Variant.Filled" ButtonType="ButtonType.Submit" StartIcon="@Icons.Filled.Save" Style="@($"color:{Colors.Shades.Black};")" IconColor="Color.Success">
                                        @L["Save"]
                                    </MudButton>
                                }
                                else if (AppDataService.AppUser.RolePackageStatus.Equals(VerificationStatus.Submitted))
                                {
                                    <MudButton Class="@(IsForSubmission ? "d-inline-flex py-2 px-5 mx-2" : "d-none py-2 px-5 mx-2")" Variant="Variant.Filled" ButtonType="ButtonType.Submit" StartIcon="@Icons.Filled.Save" Style="@($"color:{Colors.Shades.Black};")" IconColor="Color.Success">
                                        @L["Payment"]
                                    </MudButton>

                                }
                            </MudGrid>
                        </MudCardActions>
                    </MudCardContent>
                </MudCard>
            }
        </MudPaper>



    </EditForm>

}