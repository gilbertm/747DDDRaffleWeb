@inject IStringLocalizer<Profile> L

<MudCardContent Style="padding:0px!important;position:relative">
    @{
        var _forUploadFile = ForUploadFiles?.Where(f => f.FileIdentifier.Equals(FileIdentifier)).FirstOrDefault();
        var _imageUrl = string.IsNullOrEmpty(_forUploadFile?.InputOutputResourceImgUrl) ? string.Empty : (Config[ConfigNames.ApiBaseUrl] + _forUploadFile?.InputOutputResourceImgUrl);

        <div class="d-flex justify-center mb-4">
            @if (!string.IsNullOrEmpty(_imageUrl))
            {
                <MudCard Class="position-relative text-center" @onmouseover="@(() => Hover(_forUploadFile ?? default!))" @onmouseleave="@(() => ClearHover(_forUploadFile ?? default!))">
                    <MudCardContent>
                        <MudAvatar Square="true" Image="@_imageUrl" Style=" width:100%;height:150px;position:relative"></MudAvatar>

                         @switch (Enum.GetName(typeof(InputOutputResourceDocumentType), FileIdentifier))
                            {
                                case "Passport":
                                    <MudText Style="line-height:1rem;display:inline-block;" Typo="Typo.caption">Front<br>Passport</MudText>
                                    break;
                                case "PassportBack":
                                    <MudText Style="line-height:1rem;display:inline-block;" Typo="Typo.caption">Back<br>Passport</MudText>
                                    break;
                                case "NationalId":
                                    <MudText Style="line-height:1rem;display:inline-block;" Typo="Typo.caption">Front<br>Nadtional Id</MudText>
                                    break;
                                case "NationalIdBack":
                                    <MudText Style="line-height:1rem;display:inline-block;" Typo="Typo.caption">Back<br>National Id</MudText>
                                    break;
                                case "GovernmentId":
                                    <MudText Style="line-height:1rem;display:inline-block;" Typo="Typo.caption">Front<br>Government Id</MudText>
                                    break;
                                case "GovernmentIdBack":
                                    <MudText Style="line-height:1rem;display:inline-block;" Typo="Typo.caption">Back<br>Government Id</MudText>
                                    break;
                                case "SelfieWithAtLeastOneCard":
                                    <MudText Style="line-height:1rem;display:inline-block;" Typo="Typo.caption">Selfie<br>With at least one of the cards above</MudText>
                                    break;
                                default:
                                    <MudText Style="line-height:1rem;display:inline-block;" Typo="Typo.caption">Others</MudText>
                                    break;

                            }
                    </MudCardContent>

                    <MudOverlay Visible="_forUploadFile?.isHovered ?? false" DarkBackground="true" Absolute="true" Class="text-center">
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(() => Remove(_forUploadFile ?? default!))">Remove</MudButton>
                    </MudOverlay>
                </MudCard>
            }
            else
            {
                <MudCard Class="position-relative" Elevation="0">
                    <MudCardContent Class="align-center text-center">
                        <MudAvatar Color="Color.Error" Variant="Variant.Outlined" Style=" width:100px;height:100px;position:relative"><MudText Typo="Typo.caption">Upload</MudText></MudAvatar>
                    </MudCardContent>
                    <MudCardActions Class="d-block align-center text-center">
                        @{

                            <InputFile id="@Enum.GetName(typeof(InputOutputResourceDocumentType), FileIdentifier)" OnChange="@((InputFileChangeEventArgs e) => UploadFiles(e, _forUploadFile ))" capture hidden accept=".jpg,.jpeg,.png" />

                            @switch (Enum.GetName(typeof(InputOutputResourceDocumentType), FileIdentifier))
                            {
                                case "Passport":
                                    <MudText Style="line-height:1rem;display:inline-block;" Typo="Typo.caption">Front<br>Passport</MudText>
                                    break;
                                case "PassportBack":
                                    <MudText Style="line-height:1rem;display:inline-block;" Typo="Typo.caption">Back<br>Passport</MudText>
                                    break;
                                case "NationalId":
                                    <MudText Style="line-height:1rem;display:inline-block;" Typo="Typo.caption">Front<br>Nadtional Id</MudText>
                                    break;
                                case "NationalIdBack":
                                    <MudText Style="line-height:1rem;display:inline-block;" Typo="Typo.caption">Back<br>National Id</MudText>
                                    break;
                                case "GovernmentId":
                                    <MudText Style="line-height:1rem;display:inline-block;" Typo="Typo.caption">Front<br>Government Id</MudText>
                                    break;
                                case "GovernmentIdBack":
                                    <MudText Style="line-height:1rem;display:inline-block;" Typo="Typo.caption">Back<br>Government Id</MudText>
                                    break;
                                case "SelfieWithAtLeastOneCard":
                                    <MudText Style="line-height:1rem;display:inline-block;" Typo="Typo.caption">Selfie<br>With at least one of the cards above</MudText>
                                    break;
                                default:
                                    <MudText Style="line-height:1rem;display:inline-block;" Typo="Typo.caption">Others</MudText>
                                    break;

                            }
                            <div style="padding-top:20px;display:block;">
                                <MudButton HtmlTag="label" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small" StartIcon="@Icons.Filled.CloudUpload" for="@Enum.GetName(typeof(InputOutputResourceDocumentType), FileIdentifier)"><MudText Style="line-height:1rem;display:inline-block;" Typo="Typo.caption">Upload</MudText></MudButton>
                                <br />
                                @if (!string.IsNullOrEmpty(_imageUrl))
                                {
                                    <MudButton HtmlTag="label" DisableElevation Variant="Variant.Filled" Color="Color.Info" Size="Size.Small" Target="_blank" StartIcon="@Icons.Filled.RemoveRedEye" Link="@_imageUrl" Style="margin-left: 5px;">
                                        @L["View"]
                                    </MudButton>

                                    <MudButton HtmlTag="label" DisableElevation Variant="Variant.Filled" Color="Color.Error" Size="Size.Small" StartIcon="@Icons.Filled.Delete" OnClick="RemoveImageAsync" Style="margin-left: 5px;">
                                        @L["Delete"]
                                    </MudButton>
                                }
                            </div>
                        }
                    </MudCardActions>
                </MudCard>
            }
        </div>
    }
</MudCardContent>
