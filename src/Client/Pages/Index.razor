@page "/home"
@page "/"
@using Nager.Country;
@using EHULOG.BlazorWebAssembly.Client.Pages.Catalog.Anons;

@attribute [AllowAnonymous]

@if (!_isAuthenticated)
{
    <FrontAnonymousLoans />
}

<LossGeolocationPopup />

@code {
    [CascadingParameter(Name = "AppDataService")]
    protected AppDataService AppDataService { get; set; } = default!;

    [CascadingParameter]
    protected Task<AuthenticationState> AuthState { get; set; } = default!;
    [Inject]
    protected IAuthenticationService AuthService { get; set; } = default!;

    private bool _isAuthenticated = false;

    protected override async Task OnInitializedAsync()
    {
        if ((await AuthState).User is { } user)
        {
            _isAuthenticated = true;
        }


    }

    protected override async Task OnParametersSetAsync()
    {
        await AppDataService.InitializationAsync();

        if (AppDataService != default)
        {
            if (await AppDataService.IsAuthenticated() is { } user)
            {
                if (AppDataService.AppUser != default)
                {
                    if (!string.IsNullOrEmpty(AppDataService.AppUser.RoleName) && AppDataService.AppUser.RoleName.Equals("Admin"))
                    {
                        Navigation.NavigateTo("/users");
                    }
                    else if (!string.IsNullOrEmpty(AppDataService.AppUser.RoleName) && AppDataService.AppUser.RoleName.Equals("Lender"))
                    {
                        Navigation.NavigateTo("/loans/lender");
                    }
                    else
                    {
                        if (AppDataService.AppUser.RolePackageStatus != default)
                        {
                            if (AppDataService.AppUser.RolePackageStatus < VerificationStatus.Submitted)
                            {
                                Navigation.NavigateTo("/account/role-subscription");
                            }
                            else
                            {
                                Navigation.NavigateTo("/loans/lessee");
                            }
                        }
                    }
                }                
            }
        }
    }
}