@page "/catalog/front/loans"
@using System.Globalization
@using EHULOG.BlazorWebAssembly.Client.Components.EntityContainer
@using EHULOG.BlazorWebAssembly.Client.Pages.Catalog.Loans
@attribute [MustHavePermission(EHULOGAction.View, EHULOGResource.Loans)]

@inject IStringLocalizer<FrontLoans> L

<EhulogTitle Title="@L["Loans"]" Description="@L["Browse"]" />

@if (_appUserDto is not null)
{
    <EntityContainer TEntity="LoanDto" Context="@Context"></EntityContainer>
}

@code {

    private List<LoanApplicantDtoVM> Applicants { get; set; } = default!;

    protected RenderFragment<LoanDto> BodyTemplate => trail => __builder =>
    {
        var _imageUrl = string.IsNullOrEmpty(trail.LoanLenders?.FirstOrDefault().Product?.Image?.ImagePath) ? string.Empty : (Config[ConfigNames.ApiBaseUrl] + trail.LoanLenders?.First().Product?.Image?.ImagePath);


        <MudCard>
            <MudCardContent>
                @{
                    Console.WriteLine(System.Text.Json.JsonSerializer.Serialize(_imageUrl));
                }

                @{
                    Console.WriteLine(System.Text.Json.JsonSerializer.Serialize(trail.LoanLenders?.FirstOrDefault()?.Product?.Name));
                }

                <div class="thumbnail clearfix">
                    <img src="@_imageUrl" alt="" />
                    <div class="caption" id="@trail.Id">
                        <MudText Typo="Typo.h5">@trail.LoanLenders?.FirstOrDefault()?.Product?.Name</MudText>

                        <MudText Typo="Typo.body1" Class="caption-text">
                            @trail.LoanLenders?.FirstOrDefault()?.Product?.Description
                        </MudText>

                        <MudElement HtmlTag="div" Class="price-buy-spacing">
                            <MudText Class="lead">@trail.Month</MudText>
                            @* <MudElement HtmlTag="div"><a class="btn btn-success" href="/loan/@trail.Id">Add to cart</a></MudElement> *@
                        </MudElement>

                        @if (trail.LoanApplicants is not null)
                        {
                            // create a new instance per item.
                            Applicants = new();

                            foreach (var item in trail.LoanApplicants)
                            {
                                LoanApplicantDtoVM loanApplicationDtoVM = new();
                                loanApplicationDtoVM.AppUser = item.AppUser;
                                loanApplicationDtoVM.Email = string.Empty;
                                loanApplicationDtoVM.FirstName = string.Empty;
                                loanApplicationDtoVM.LastName = string.Empty;
                                loanApplicationDtoVM.PhoneNumber = string.Empty;
                                loanApplicationDtoVM.ImageURL = string.Empty;

                                Applicants.Add(loanApplicationDtoVM);
                            }

                            <SpecificLoanApplicants IsMinimal="true" LoanId="@trail.Id" IsPossibleToAppy="true" Applicants="@Applicants" />
                        }
                        
                    </div>
                </div>
            </MudCardContent>
        </MudCard>
    };
}