<MudCard Elevation="0">
    <MudCardContent Class="py-0">
        <MudImage Fluid="true" Src="@imageUrl" Alt="@productName" Class="rounded-lg" />
    </MudCardContent>
    <MudCardContent Class="py-0 text-center">
        @* if (trail.LoanApplicants is not null)
        {
        <SpecificLoanApplicants IsMinimal="true" LoanId="@trail.Id" IsPossibleToAppy="true" Applicants="@trail.LoanApplicants" LoanLessee="@_loanLesseeDto" LoanStatus="@trail.Status" />
        } *@

        @if (Loan != default)
        {           
            <MudText Typo="Typo.h5" Class="d-inline" Style="@($"color:{Colors.Amber.Darken2}")">@string.Format("{0:#,0.00}", sumLoan)</MudText> <MudText Typo="Typo.body1" Class="d-inline" Style="@($"color:{Colors.Amber.Darken1}")">@AppDataService.GetCurrency()</MudText>
            @if (@Loan.LoanLenders != default)
            {
                <br />
                @if (@Loan.LoanLenders.FirstOrDefault() != default)
                {
                    var loanLender = @Loan.LoanLenders.First();

                    if (loanLender.Product != default)
                    {
                        <MudText Typo="Typo.caption" Style="@($"color:{Colors.Brown.Lighten1}")">@loanLender.Product.Name</MudText>
                    }
                }
            }

        }

    </MudCardContent>
    <MudCardContent Class="minimal-loan-main-details py-0 my-3">
        <EHULOG.BlazorWebAssembly.Client.Pages.Catalog.Loans.Components.Block.MinimalLoanMainDetails Loan="Loan" />
    </MudCardContent>
    @if (!DisableStatus)
    {
        <MudCardContent Class="minimal-block-info-loan-status py-0 ma-1">
            <MinimalBlockInfoLoanStatus Loan="@Loan" OnUpdatedLoan="UpdateLoan" />
        </MudCardContent>
    }

    <MudCardActions>
         @if (Loan.Status < LoanStatus.Assigned)
            {
                <BlockInfoLoanApplicants Loan="Loan" />
            }

    </MudCardActions>
</MudCard>


@code {
    LoanLesseeDto loanLesseeDto = default!;
    LoanLenderDto loanLenderDto = default!;
    List<LoanLedgerDto> loanLedgers = default!;
    float sumLoan = 0f;
    string imageUrl = string.Empty;
    string productName = string.Empty;

    protected override void OnInitialized()
    {
        string href = "/loan/" + @Loan.Id;



        if (Loan.LoanLenders != default)
        {
            loanLenderDto = Loan.LoanLenders.FirstOrDefault() ?? default!;

            if (loanLenderDto != default)
            {
                if (loanLenderDto.Product != default)
                {
                    if (loanLenderDto.Product.Image != default)
                    {
                        imageUrl = Config[ConfigNames.ApiBaseUrl] + loanLenderDto.Product.Image.ImagePath;
                    }

                    productName = loanLenderDto.Product.Name ?? string.Empty;
                }   
            }
        }

        if (Loan.LoanLessees != default)
        {
            loanLesseeDto = Loan.LoanLessees.Where(l => l.LoanId.Equals(Loan.Id)).FirstOrDefault() ?? default!;
        }

        if (Loan.Ledgers != default)
        {
            loanLedgers = Loan.Ledgers.ToList();

            if (loanLedgers.Count > 0)
            {
                sumLoan = loanLedgers.Sum(l => l.AmountDue);
            }
        }
    }
}