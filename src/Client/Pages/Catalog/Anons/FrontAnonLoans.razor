@page "/catalog/front/loans/anon"
@attribute [AllowAnonymous]
@using System.Globalization
@using EHULOG.BlazorWebAssembly.Client.Components.EntityContainer
@using EHULOG.BlazorWebAssembly.Client.Pages.Catalog.Loans


<EhulogTitle Title="Loans" />

@if (Context is not null && Context.SearchFunc is not null)
{
    <EntityContainer TEntity="LoanDto" Context="@Context"></EntityContainer>
}

@code {
    private List<LoanApplicantDtoVM> Applicants { get; set; } = default!;

    protected RenderFragment<LoanDto> BodyTemplate => trail => __builder =>
    {
       
        var href = "/loan/" + @trail.Id;

        <MudCard>

            <MudCardContent>
                @{
                    Console.WriteLine(System.Text.Json.JsonSerializer.Serialize(trail));
                }

                @{
                    Console.WriteLine(System.Text.Json.JsonSerializer.Serialize(trail.LoanLenders?.FirstOrDefault()?.Product?.Name));
                }

                <div class="thumbnail clearfix">
                    <img src="https://picsum.photos/400/250" alt="" />
                    <div class="caption" id="@trail.Id">
                        <MudText Typo="Typo.h5">@trail.LoanLenders?.FirstOrDefault()?.Product?.Name</MudText>

                        <MudText Typo="Typo.body1" Class="caption-text">
                            Description: @trail.LoanLenders?.FirstOrDefault()?.Product?.Description
                        </MudText>

                        <MudText Typo="Typo.body1" Class="caption-text">
                            Home: @trail.LoanLenders?.FirstOrDefault()?.Lender?.HomeCity
                        </MudText>


                        <MudElement HtmlTag="div" Class="price-buy-spacing">
                            <MudText Class="lead">@trail.Month</MudText>
                        </MudElement>
                        <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.PlayArrow" IconColor="Color.Surface" Size="Size.Small" Href="@href">Apply</MudButton>
                    </div>
                    <div class="caption" id="@trail.Id">
                        <h2>Ledger</h2>
                    </div>
                   
                    @if (trail.LoanApplicants is not null)
                    {
                        // create a new instance per item.
                        Applicants = new();

                        foreach (var item in trail.LoanApplicants)
                        {
                            LoanApplicantDtoVM loanApplicationDtoVM = new();
                            loanApplicationDtoVM.AppUser = item.AppUser;
                            loanApplicationDtoVM.Email = string.Empty;
                            loanApplicationDtoVM.FirstName = string.Empty;
                            loanApplicationDtoVM.LastName = string.Empty;
                            loanApplicationDtoVM.PhoneNumber = string.Empty;
                            loanApplicationDtoVM.ImageURL = string.Empty;

                            Applicants.Add(loanApplicationDtoVM);
                        }

                        @if (Applicants.Count() > 0)
                        {
                            <div class="caption" id="@trail.Id">
                                <h2>@Applicants.Count()</h2>
                            </div>
                        }
                    }
                </div>
            </MudCardContent>
        </MudCard>
    };
}